// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Guild {
  id          String      @id @default(auto()) @map("_id")
  guildId     String
  prefix      String
  stay        Stay?
  dj          Dj?
  roles       Role[]
  botchannel  Botchannel?
  setup       Setup?
}

model Stay {
  id       String @id @default(auto()) @map("_id")
  guildId  String
  textId   String
  voiceId  String
  guild    Guild  @relation(fields: [guildId], references: [guildId])
}

model Dj {
  id       String  @id @default(auto()) @map("_id")
  guildId  String
  mode     Boolean
  guild    Guild   @relation(fields: [guildId], references: [guildId])
}

model Role {
  id       String  @id @default(auto()) @map("_id")
  guildId  String
  roleId   String
  guild    Guild  @relation(fields: [guildId], references: [guildId])

  @@unique([guildId, roleId])
}

model Playlist {
  id       String @id @default(auto()) @map("_id")
  userId   String
  name     String
  songs    Song[]

  @@unique([userId, name])
}

model Song {
  id         String   @id @default(auto()) @map("_id")
  track      String
  playlistId String
  playlist   Playlist @relation(fields: [playlistId], references: [id])

  @@unique([track, playlistId])
}

model Botchannel {
  id       String @id @default(auto()) @map("_id")
  guildId  String
  textId   String
  guild    Guild  @relation(fields: [guildId], references: [guildId])
}

model Setup {
  id        String @id @default(auto()) @map("_id")
  guildId   String
  textId    String
  messageId String
  guild     Guild  @relation(fields: [guildId], references: [guildId])
}

model Premium {
  id       String @id @default(auto()) @map("_id")
  userId   String
  guildId  String
}
