// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Guild {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  guildId     String  @unique
  prefix      String
  stays       Stay[]
  djs         Dj[]
  roles       Role[]
  botchannels Botchannel[]
  setups      Setup[]
  premiums    Premium[]
}

model Stay {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  guildId  String
  guild    Guild  @relation(fields: [guildId], references: [guildId])
  voiceId  String
}

model Dj {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  guildId  String
  guild    Guild   @relation(fields: [guildId], references: [guildId])
  mode     Boolean
}

model Role {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  guildId  String
  roleId   String
  guild    Guild  @relation(fields: [guildId], references: [guildId])

  @@unique([guildId, roleId])
}

model Playlist {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  userId   String
  songs    Song[]
}

model Song {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  track    String
  playlist Playlist @relation(fields: [playlistId], references: [id])
  playlistId String
}

model Botchannel {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  guildId  String
  guild    Guild  @relation(fields: [guildId], references: [guildId])
  textId   String
}

model Setup {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  guildId   String
  guild     Guild  @relation(fields: [guildId], references: [guildId])
  textId    String
}

model Premium {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  guildId   String
  guild     Guild  @relation(fields: [guildId], references: [guildId])
  messageId String
}
